# Generated by Django 2.0.13 on 2019-11-18 09:35

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import publications.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=100)),
                ('lastname', models.CharField(max_length=100)),
                ('year_of_birth', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1850), publications.models.max_value_current_year], verbose_name='year_of_birth')),
            ],
        ),
        migrations.CreateModel(
            name='Church',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='IllustrationLayoutType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('direction', models.CharField(choices=[('Left', publications.models.WritingDirection.L, ('Right', publications.models.WritingDirection.R))], default='Right', max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('CI', publications.models.LocationType('CI')), ('CO', publications.models.LocationType('CO')), ('AR', publications.models.LocationType('AR'))], default='CI', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_original', models.CharField(max_length=300)),
                ('title_subtitle_transcription', models.CharField(max_length=300)),
                ('title_subtitle_european', models.CharField(max_length=300)),
                ('title_translation', models.CharField(max_length=300)),
                ('printed_by', models.CharField(max_length=100)),
                ('published_by', models.CharField(max_length=100)),
                ('publication_date', models.DateField()),
                ('venue', models.CharField(max_length=100)),
                ('nr_of_pages', models.IntegerField()),
                ('collection_date', models.DateField()),
                ('collection_country', django_countries.fields.CountryField(max_length=2)),
                ('collection_venue', models.CharField(max_length=100)),
                ('copyrights', models.NullBooleanField()),
                ('comments', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='SpecialOccasion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Translator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=100)),
                ('lastname', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('type', models.CharField(choices=[('P', publications.models.DocumentType('P')), ('W', publications.models.DocumentType('W')), ('I', publications.models.DocumentType('I')), ('V', publications.models.DocumentType('V'))], default='P', max_length=1)),
                ('publication', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='publications.Publication')),
                ('public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=100)),
                ('location_on_disk', models.CharField(max_length=150)),
            ],
        ),
        migrations.AddField(
            model_name='publication',
            name='author',
            field=models.ManyToManyField(to='publications.Author'),
        ),
        migrations.AddField(
            model_name='publication',
            name='church',
            field=models.ManyToManyField(to='publications.Church'),
        ),
        migrations.AddField(
            model_name='publication',
            name='currently_owned_by',
            field=models.ManyToManyField(to='publications.Owner'),
        ),
        migrations.AddField(
            model_name='publication',
            name='genre',
            field=models.ManyToManyField(to='publications.Genre'),
        ),
        migrations.AddField(
            model_name='publication',
            name='illustration_and_layout',
            field=models.ManyToManyField(to='publications.IllustrationLayoutType'),
        ),
        migrations.AddField(
            model_name='publication',
            name='language',
            field=models.ManyToManyField(to='publications.Language'),
        ),
        migrations.AddField(
            model_name='publication',
            name='publication_city',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='publications.City'),
        ),
        migrations.AddField(
            model_name='publication',
            name='publication_country',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='publications.Country'),
        ),
        migrations.AddField(
            model_name='publication',
            name='special_occasion',
            field=models.ManyToManyField(to='publications.SpecialOccasion'),
        ),
        migrations.AddField(
            model_name='publication',
            name='translator',
            field=models.ManyToManyField(to='publications.Translator'),
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='publications.Country'),
        ),
    ]
